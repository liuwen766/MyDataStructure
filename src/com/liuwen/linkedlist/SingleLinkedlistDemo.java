package com.liuwen.linkedlist;

public class SingleLinkedlistDemo {
    public static void main(String[] args){
        //先创建节点

        //创建要给的链表

        //显示一把

        //测试修改节点的代码

        //删除一个节点

        // 测试一下单链表的反转功能

        //测试一下 求单链表中有效节点的个数

        //测试一下看看是否得到了倒数第K个节点

    }
    //定义HeroNode ， 每个HeroNode 对象就是一个节点

    //显示链表[遍历]

    //删除节点
    //思路
    //1. head 不能动，因此我们需要一个temp辅助节点找到待删除节点的前一个节点
    //2. 说明我们在比较时，是temp.next.no 和  需要删除的节点的no比较

    //修改节点的信息, 根据no编号来修改，即no编号不能改.

    //添加节点到单向链表
    //思路，当不考虑编号顺序时
    //1. 找到当前链表的最后节点
    //2. 将最后这个节点的next 指向 新的节点

    //定义SingleLinkedList 管理我们的英雄

    //查找单链表中的倒数第k个结点 【新浪面试题】

    //获取到单链表的节点的个数(如果是带头结点的链表，需求不统计头节点)

    //将单链表反转

    //逆序打印链表
}
